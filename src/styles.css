body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}
:root {
  /* GLOBAL COLOR VARIABLES */
  --light-grey: #d3d0cb;
  --light-green: #8ff7a7;
  --light-yellow: #fcdc4d;
  --dark-grey: #b8b3be;
  /* KEYBOARD VARIABLES */
  --kb-btn-height: 3rem;
  --kb-btn-width: 4rem;
}

ul,
ol {
  list-style: none;
}
/* CREATE GAME */
#container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#wordle-title {
  margin: 0;
  font-size: 3rem;
  user-select: none;
}

#create-game-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#create-game-ul {
  display: flex;
  flex-direction: column;
  row-gap: 0.5rem;
}

#create-game-ul > * {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  column-gap: 2rem;
}

.hidden {
  display: none !important;
}

button {
  outline: none;
  padding: 0.25rem 1rem;
  font-weight: 500;
  font-size: 1.5rem;
  border-radius: 1rem;
  border: 1px #b8b3be solid;
  margin: 0.125rem;
}
/* GAME BOXES */
.game-row {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  column-gap: 0.125rem;
}
.game-box {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  border-radius: 1rem;
  margin-inline: 0.125rem;
  min-width: 5rem;
  min-height: 4rem;
  overflow: hidden;
  user-select: none;
}

.game-box-letter {
  width: 100%;
  height: 100%;
}

.game-box-default {
  background-color: var(--light-grey) !important;
}

.game-box-green {
  background-color: var(--light-green) !important;
}

.game-box-yellow {
  background-color: var(--light-yellow) !important;
}

.game-box-grey {
  background-color: var(--dark-grey) !important;
}
/* MODAL */
.modal {
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  margin: 2% auto;
  padding: 1rem 2rem;
  border: 1px solid #888;
  width: 40%;
  background-color: white;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  border-radius: 1rem;
  overflow: hidden;
}

.modal-content > header {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.graph-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.dist-title {
  margin: 0;
}
.dist-type {
  margin: 0 0 .25rem 0;
}
.stats-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1rem;
  margin-bottom: 1rem;
}

.stats-box {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--light-grey);
  border-radius: 1rem;
  padding: 0.5rem 0;
}

.stats-label {
  font-size: 1rem;
  font-weight: 500;
  text-align: center;
}

.stats-value {
  font-size: 1.5rem;
  font-weight: 500;
}
.modal-buttons {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
}
/* KEYBOARD */
/* i think this is the most elegant way to do this, it works */
#kb-wrapper > * {
  gap: 0.25rem;
}
.kb-row-0 {
  display: grid;
  grid-template-columns: repeat(10, var(--kb-btn-width)) 1fr;
}

.kb-row-1 {
  display: grid;
  grid-template-columns: repeat(9, var(--kb-btn-width)) 8rem;
  margin-inline-start: 1rem;
}

.kb-row-2 {
  margin-inline: 8rem;
  display: grid;
  grid-template-columns: repeat(7, var(--kb-btn-width));
}

.kb-key {
  width: 100%;
  background-color: var(--light-grey);
  border-radius: 1rem;
  align-content: center;
  height: var(--kb-btn-height);
}

button:hover {
  /* i don't know if i like this */
  filter: brightness(0.95);
}

/* TIMER */
#timer {
  position: fixed;
  right: 0.5rem;
  top: 0;
  color: black;
  font-size: 2rem;
  user-select: none;
}

#timer > * {
  display: inline;
  user-select: none;
}

/* SCOREBOARD */


td,
th {
  padding: 0.5rem;
  text-align: center;
  outline: solid 1px #b8b3be;
}

.shake-effect{
  animation: shake infinite 1s linear;
}
@keyframes shake {
  10%, 90%{
    transform: translate3d(-1px, 0, 0);
  }

  20%, 80%{
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70%{
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60%{
    transform: translate3d(4px, 0, 0);
  }
}

